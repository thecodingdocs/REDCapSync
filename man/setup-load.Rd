% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setup_project.R
\name{setup_project}
\alias{setup_project}
\alias{load_project}
\alias{load_test_project}
\title{Setup or Load REDCapSync Project}
\usage{
setup_project(
  short_name,
  dir_path,
  redcap_uri,
  token_name = paste0("REDCapSync_", short_name),
  sync_frequency = "daily",
  labelled = TRUE,
  hard_reset = FALSE,
  records = NULL,
  fields = NULL,
  forms = NULL,
  events = NULL,
  filter_logic = NULL,
  get_type = "identified",
  metadata_only = FALSE,
  batch_size_download = 2000,
  batch_size_upload = 500,
  entire_log = FALSE,
  days_of_log = 10,
  get_files = FALSE,
  get_file_repository = FALSE,
  original_file_names = FALSE,
  add_default_fields = FALSE,
  add_default_transformation = TRUE,
  add_default_summaries = TRUE,
  use_csv = FALSE,
  silent = FALSE
)

load_project(short_name)

load_test_project(short_name = "TEST_repeating", with_data = FALSE)
}
\arguments{
\item{short_name}{A character string with no spaces or symbols representing
the unique short name for the REDCap project.}

\item{dir_path}{Optional character string representing the directory path
where you want the REDCap project data to be stored. If missing, project
object
will only be in current R session.}

\item{redcap_uri}{A character string representing the base URL of the REDCap
server.}

\item{token_name}{An optional character string for setting your token name.
Default is \verb{REDCapSync_<short_name>}}

\item{sync_frequency}{Frequency of sync. Options are "always", "hourly",
'daily', 'weekly', "monthly",and "never". The check is only triggered by
calling the function, but can be automated with other packages.
Default is \code{daily}}

\item{labelled}{Logical. If \code{TRUE}, the data will be converted to labelled.
Default is \code{TRUE}.}

\item{hard_reset}{Logical (TRUE/FALSE). If TRUE, forces the setup even if the
\code{project} object already exists. Default is \code{FALSE}.}

\item{records}{An array, where each element corresponds to the ID of a
desired record.  Optional.}

\item{fields}{An array, where each element corresponds to a desired project
field.  Optional.}

\item{forms}{An array, where each element corresponds to a desired project
form.  Optional.}

\item{events}{An array, where each element corresponds to a desired project
event.  Optional.}

\item{filter_logic}{String of logic text (e.g., \verb{[gender] = 'male'}) for
filtering the data to be returned by this API method, in which the API
will only return the records (or record-events, if a longitudinal project)
where the logic evaluates as TRUE.   An blank/empty string returns all records.}

\item{get_type}{optional character of REDCap API call type.
data as if user ran \code{sync_project}. Default is \code{FALSE}.}

\item{metadata_only}{Logical (TRUE/FALSE). If TRUE, updates only the
metadata. Default is \code{FALSE}.}

\item{batch_size_download}{Integer. Number of records to process in each
batch. Default is \code{2000}.}

\item{batch_size_upload}{Integer. Number of records to process in each batch.
Default is \code{500}.}

\item{entire_log}{Logical (TRUE/FALSE). If TRUE, retrieves the entire log.
Default is \code{FALSE}.}

\item{days_of_log}{Integer. Number of days to be checked in the log if a
hard_reset
or new project is setup. Default is \code{10}.}

\item{get_files}{Logical (TRUE/FALSE). If TRUE, retrieves files from REDCap.
Default is \code{FALSE}.}

\item{get_file_repository}{Logical (TRUE/FALSE). If TRUE, retrieves file
repository
from REDCap.
Default is \code{FALSE}.}

\item{original_file_names}{Logical (TRUE/FALSE). If TRUE, uses original file
names for retrieved files. Default is \code{FALSE}.}

\item{add_default_fields}{Logical (TRUE/FALSE). If TRUE,
will add default fields}

\item{add_default_transformation}{Logical (TRUE/FALSE). If TRUE,
will add default transformation}

\item{add_default_summaries}{Logical (TRUE/FALSE). If TRUE,
will add default summaries}

\item{use_csv}{Logical (TRUE/FALSE). If TRUE, uses CSV files for data
storage. Default is \code{FALSE}.}

\item{silent}{Logical (TRUE/FALSE). For messages.}

\item{with_data}{Logical (TRUE/FALSE). If TRUE, loads the test project
object with data included.}
}
\value{
REDCapSync \code{project} list object.
}
\description{
Setup or Load the \code{project} object for pipeline.
}
\details{
This function sets up the \code{project} object by storing the REDCap API token
and
other configurations required for interacting with the REDCap server.
It ensures that the token is valid and ready for use in subsequent API calls.
Neither function directly attempts communication with REDCap.

\code{setup_project} is used the first time you initialize/link a REDCap project.
Mainly, it sets your unique \code{short_name} and your intended directory.
Unless you run \code{hard_reset = TRUE} the default will first try load_project.
dir_path is technically optional but without it the user cannot
save/load/update projects.

\code{load_project} can be used with just the \code{short_name} parameter after you
have
already run \code{setup_project} in the past with an established directory.
\code{dir_path}
is optional for this function but can be used if you relocated the directory.
}
\examples{
\dontshow{if (FALSE) withAutoprint(\{ # examplesIf}
# Initialize the project object with the REDCap API token and URL
project <- setup_project(
  short_name = "TEST",
  dir_path = "path/to/secure/file/storage",
  redcap_uri = "https://redcap.yourinstitution.edu/api/"
)
project <- load_project("TEST")
\dontshow{\}) # examplesIf}
}
\seealso{
\code{\link[REDCapSync]{get_projects}} for retrieving a list of projects from
the directory cache.

Other project object: 
\code{\link{save_project}()}
}
\concept{project object}
